ascended_empire = {
	strategy_weight = {
		modifier = {
			is_country_type = ascended_empire
			weight = 1
		}
	}

	network_weight = {
		modifier = {
			target = {
				has_crisis_level = crisis_level_2 # Using second level here just to get some delay for getting targetted.
			}
			weight = 9
		}
		
		modifier = {
			target = {
				is_country_type = ascended_empire #Must always send spies to other Ascended Empires.
			}
			weight = 10
		}

		modifier = {
			# Rivals are we consider more of a threat than crisis, it is likely that crisis empires will become rivals in the end anyways if they matter.
			owner = {
				has_rival = root.target
			}
			weight = 10
		}

		modifier = {
			# Proximity is they key, double the score if its a neighbour.
			owner = {
				is_neighbor_of = root.target
			}
			factor = 2
		}
	}

	operation_selector = weighted_random_available

	operations = {
		operation_acquire_asset = {
			operation_policy = until_max_network_cap_policy

			target_value = {
				min = 1
			}
		}

		operation_steal_technology = {
			operation_policy = fix_chance_10

			target_value = {
				min = 1
			}
		}

		operation_gather_information = {
			operation_policy = fix_chance_10

			target_value = {
				min = 1
			}
		}
	}
}

lost_empire = {
	strategy_weight = {
		modifier = {
			is_country_type = lost_empire
			weight = 1
		}
	}

	network_weight = {
		modifier = {
			target = {
				has_crisis_level = crisis_level_2 # Using second level here just to get some delay for getting targetted.
			}
			weight = 9
		}
		
		modifier = {
			target = {
				is_country_type = ascended_empire #Must always send spies to other Ascended Empires.
			}
			weight = 10
		}
		
		modifier = {
			target = {
				is_overlord_to = root #Must always spy on their overlord.
			}
			weight = 10
		}
		
		modifier = {
			# Rivals are we consider more of a threat than crisis, it is likely that crisis empires will become rivals in the end anyways if they matter.
			owner = {
				has_rival = root.target
			}
			weight = 10
		}
		
		modifier = {
			# Proximity is they key, double the score if its a neighbour.
			owner = {
				is_neighbor_of = root.target
			}
			factor = 2
		}
	}

	operation_selector = weighted_random_available

	operations = {
		operation_acquire_asset = {
			operation_policy = until_max_network_cap_policy

			target_value = {
				min = 1
			}
		}

		operation_steal_technology = {
			operation_policy = fix_chance_10

			target_value = {
				min = 1
			}
		}

		operation_gather_information = {
			operation_policy = fix_chance_10

			target_value = {
				min = 1
			}
		}
	}
}